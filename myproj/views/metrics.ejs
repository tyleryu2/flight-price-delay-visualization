<!DOCTYPE html>
<html lang="en">
<head>
  <title>Flight Metrics</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
  <script src="https://unpkg.com/color-legend-element@1.0.3/build/color-legend-element.umd.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap JavaScript and dependencies -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
  <div class="container-fluid">
    <div class="row header">
      <div class="col-lg-1 page">
        <a href="/routes_map">
          <button class="btn btn-primary disabled">Routes Map</button>
        </a>
      </div>
      <div class="col-lg-1 page">
        <a href="/flight_metrics">
          <button class="btn btn-primary active">Flight Metrics</button>
        </a>
      </div>  
      <div class="col-lg-10"></div>
    </div>

    <div class="row content">
      <div class="row metric-form">
        <form autocomplete="off" id="metric-form">
          <select name="metric-type" id="metric-type">
            <option value="airport-traffic-metric">Airport Traffic</option>
            <!-- <option value="airport-time-metric">Airport Timeliness</option>
            <option value="arieline-traffic-metric">Airline Traffic</option> -->
            <option value="airline-time-metric">Airline Timeliness</option>
          </select>
          <input class="btn btn-primary" id="submit-metric" type="submit">
        </form>
      </div>
        <!-- <button id="airport-metric">Airport Metric</button> -->
      <div id="map-container" style="display: none">
        <div class="row">
          <h3>Incoming and Outgoing Flights + Average Delay for Each Airport</h3>
        </div>
        <div class="row">
          <div class="col-lg-8">
            <div id="map-canvas"></div>
            <div class="info" style="position: absolute; font-family: Arial; font-size: 14px; display: none;"></div>
            
            <div class="row">
              <div class="col-lg-7">
                <form autocomplete="off" id="filter-form">
                  <div class="row filters" style="margin-top: 20px;">
                    <h3>Filters for Average Total Delay</h3>
                    <div class="row">
                      <b class="col-lg-3">Airport as Origin</b>
                      <b class="col-lg-4">Airport as Destination</b>
                    </div>
                    <div class="row filter-delay">
                      <!-- <b>Airport as Origin</b> -->
                      <div class="col-lg-3">
                        <div class="autocomplete">
                          <input class="min-max" id="originMinDelay" type="text" name="originMinDelay" placeholder="Min">
                        </div>
                        <div class="autocomplete">
                          <input class="min-max" id="originMaxDelay" type="text" name="originMaxDelay" placeholder="Max">
                        </div>
                      </div>
                      <!-- <b>Airport as Destination</b> -->
                      <div class="col-lg-4">
                        <div class="autocomplete">
                          <input class="min-max" id="destMinDelay" type="text" name="destMinDelay" placeholder="Min">
                        </div>
                        <div class="autocomplete">
                          <input class="min-max" id="destMaxDelay" type="text" name="destMaxDelay" placeholder="Max">
                        </div>
                      </div>
                    </div>
                    <input class="row btn btn-primary" id="submit-filter" type="submit" value="Submit Filters">
                  </div>
                </form>
              </div>
              <div class="col-lg-5">
                <div id="color-legend" style="display: none;">
                  <div class="row">
                    <color-legend
                      titletext="Airport Color by Proportion of Outgoing Flights (%)"
                      scaletype="continuous"
                      range='["#ff0000", "#00ff00"]'
                      domain="[0, 100]"
                      tickFormat=".0f"
                      tickValues="[0, 25, 50, 75, 100]"
                    >
                    </color-legend>
                  </div>
                </div>
              </div>
            </div>

          </div>
          <div class="col-lg-4 table-container">
            <table class="table table-hover table-bordered" id="airports-table">
              <thead>
                <tr>
                  <th>Airport</th>
                  <th>Number Incoming</th>
                  <th>Number Outgoing</th>
                  <th>Average Delay as Origin (min)</th>
                  <th>Average Delay as Destination (min)</th>
                </tr>
              </thead>
              <tbody>
          
              </tbody>
            </table>
          </div>
        </div>

      </div>
      <div id="chart-container" style="display: none">
        <!-- <div class="row chart-content">
          <div class="col-lg-6">
            <h3>Top 5 Origin Airports for Each Airline</h3>
          </div>
          <div class="col-lg-6">
            <h3>Early and Late Flights for Each Airline</h3>
          </div>
        </div> -->
        <div class="row">
          <div class="col-lg-6">
            <h3>Top 5 Origin Airports for Each Airline</h3>
            <div id="map-container2" style="display: none">
              <div class="row">
                <div id="map-canvas2"></div>
                <div class="info" style="position: absolute; font-family: Arial; font-size: 14px; display: none;"></div>
                <!-- <div id="color-legend2" style="display: none;">
                  <div class="row">
                    <color-legend
                      titletext="Airport Color by Proportion of Outgoing Flights (%)"
                      scaletype="continuous"
                      range='["#ff0000", "#00ff00"]'
                      domain="[0, 100]"
                      tickFormat=".0f"
                      tickValues="[0, 1, 2, 3, 4]"
                    >
                    </color-legend>
                  </div>
                </div> -->
                <b>Select Airline</b>
                <div class="row">
                  <select class="airlineSelect" name="airlineSelect" id="airlineSelect" style="width: 200px;">
                    <option value="WN">WN: Southwest Airlines</option>
                    <option value="AA">AA: American Airlines</option>
                    <option value="DL">DL: Delta Airlines</option>
                    <option value="UA">UA: United Airlines</option>
                    <option value="OO">OO: SkyWest Airlines</option>
                    <option value="YX">YX: Republic Airways</option>
                    <option value="B6">B6: JetBlue Airways</option>
                    <option value="NK">NK: Spirit Airlines</option>
                    <option value="MQ">MQ: Envoy Air</option>
                    <option value="AS">AS: Alaska Airlines</option>
                    <option value="9E">9E: Endeavor</option>
                    <option value="YV">YV: Mesa Airlines</option>
                    <option value="F9">F9: Frontier Airlines</option>
                    <option value="OH">OH: PSA Airlines</option>
                    <option value="G4">G4: Allegiant Air</option>
                    <option value="QX">QX: Horizon Air</option>
                  </select>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-6 charts">
            <div class="row">
              <div class="col-lg-1"></div>
              <div class="col-lg-11">
                <h3>Early and Late Flights for Each Airline</h3>
                <canvas id="chart1"></canvas>
                <canvas id="chart2"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>



<script type="text/javascript">
const airport_coords = {
  "FLL": [26.072599, -80.152702],
  "MSP": [44.880081, -93.221741],
  "DEN": [39.861698150635, -104.672996521],
  "DAL": [32.847099, -96.851799],
  "HSV": [34.637199, -86.775101],
  "IAH": [29.984399795532227, -95.34140014648438],
  "ATL": [33.6367, -84.428101],
  "MDW": [41.785999, -87.752403],
  "GRR": [42.88079834, -85.52279663],
  "DFW": [32.896801, -97.038002],
  "ORD": [41.9786, -87.9048],
  "LAS": [36.083361, -115.151817],
  "AUS": [30.197535, -97.662015],
  "IND": [39.7173, -86.294403],
  "MHT": [42.932598, -71.435699],
  "BOS": [42.36197, -71.0079],
  "MSY": [29.99340057373047, -90.25800323486328],
  "CMH": [39.998001, -82.891899],
  "LGA": [40.777199, -73.872597],
  "CLT": [35.2140007019043, -80.94309997558594],
  "BNA": [36.1245002746582, -86.6781997680664],
  "DTW": [42.21377, -83.353786],
  "PHX": [33.435302, -112.005905],
  "MCI": [39.2976, -94.713898],
  "EWR": [40.692501, -74.168701],
  "LAX": [33.942501, -118.407997],
  "HPN": [41.06700134277344, -73.70760345458984],
  "JFK": [40.639447, -73.779317],
  "ASE": [39.223202, -106.869003],
  "BUF": [42.94049835, -78.73220062],
  "SLC": [40.78886, -111.979866],
  "SFO": [37.619806, -122.374821],
  "PDX": [45.58869934, -122.5979996],
  "SNA": [33.675701, -117.867996],
  "HRL": [26.228500366210938, -97.65440368652344],
  "BOI": [43.5644, -116.223],
  "BDL": [41.93851, -72.688066],
  "MIA": [25.79319953918457, -80.29060363769531],
  "BHM": [33.562901, -86.753502],
  "ELP": [31.80719948, -106.3779984],
  "TPA": [27.975500106811523, -82.533203125],
  "GSP": [34.895699, -82.218903],
  "LGB": [33.816523, -118.149891],
  "PIT": [40.49150085, -80.23290253],
  "PHL": [39.871899, -75.241096],
  "PVD": [41.725038, -71.425668],
  "CID": [41.884701, -91.7108],
  "CLE": [41.411701, -81.8498],
  "BUR": [34.197703, -118.356378],
  "HOU": [29.645399, -95.2789],
  "MYR": [33.6796989441, -78.9282989502],
  "RDM": [44.2541008, -121.1500015],
  "CVG": [39.048801, -84.667801],
  "MKE": [42.947200775146484, -87.89659881591797],
  "MCO": [28.429399490356445, -81.30899810791016],
  "BTR": [30.533199, -91.149597],
  "ECP": [30.357106, -85.795414],
  "SEA": [47.447943, -122.310276],
  "STL": [38.748697, -90.370003],
  "SAN": [32.7336006165, -117.190002441],
  "JAX": [30.492469, -81.687813],
  "ABQ": [35.039976, -106.608925],
  "ALB": [42.74829864501953, -73.80169677734375],
  "SAT": [29.533701, -98.469803],
  "SMF": [38.69540023803711, -121.59100341796875],
  "ISP": [40.79520035, -73.10019684],
  "PSP": [33.8297, -116.507004],
  "BWI": [39.1754, -76.668297],
  "ACY": [39.45759963989258, -74.57720184326172],
  "OAK": [37.720085, -122.221184],
  "BZN": [45.7775, -111.153],
  "ORF": [36.895341, -76.201],
  "BGR": [44.8074, -68.828102],
  "CHS": [32.898602, -80.040497],
  "PWM": [43.646198, -70.309303],
  "DSM": [41.534, -93.663101],
  "LAN": [42.77870178222656, -84.58740234375],
  "ONT": [34.055999755859375, -117.60099792480469],
  "COS": [38.805801, -104.700996],
  "SJC": [37.362452, -121.929188],
  "OKC": [35.393388, -97.598248],
  "CRP": [27.770399, -97.501198],
  "RDU": [35.877602, -78.787498],
  "FWA": [40.9785, -85.195099],
  "RSW": [26.53619956970215, -81.75520324707031],
  "ACV": [40.978101, -124.109],
  "CAE": [33.938801, -81.119499],
  "DCA": [38.8521, -77.037697],
  "MSN": [43.1399, -89.337502],
  "CAK": [40.916099548339844, -81.44219970703125],
  "SDF": [38.1744, -85.736],
  "GSO": [36.097801, -79.937302],
  "EYW": [24.556101, -81.759598],
  "AVL": [35.436199, -82.541801],
  "SWF": [41.504101, -74.104797],
  "AMA": [35.219398, -101.706001],
  "ROC": [43.1189, -77.672401],
  "XNA": [36.281898, -94.306801],
  "FAT": [36.776199, -119.718002],
  "ABE": [40.651773, -75.442797],
  "BLI": [48.79280090332031, -122.53800201416016],
  "RNO": [39.4991, -119.767998],
  "CHO": [38.13859939575195, -78.4529037475586],
  "MEM": [35.04240036010742, -89.97669982910156],
  "VPS": [30.4832, -86.525398],
  "MFR": [42.37419891357422, -122.87300109863281],
  "IDA": [43.514599, -112.070999],
  "TYS": [35.811001, -83.994003],
  "FAR": [46.92070007324219, -96.81580352783203],
  "EGE": [39.64260101, -106.9179993],
  "EUG": [44.12459945678711, -123.21199798583984],
  "MDT": [40.193501, -76.763397],
  "PIE": [27.9102, -82.687401],
  "DAY": [39.902401, -84.219398],
  "OMA": [41.3032, -95.894096],
  "BIS": [46.772701263427734, -100.74600219726562],
  "ACK": [41.25310135, -70.06020355],
  "PSC": [46.26470184326172, -119.11900329589844],
  "LEX": [38.036499, -84.605904],
  "LBE": [40.275902, -79.4048],
  "SYR": [43.11119842529297, -76.1063003540039],
  "TLH": [30.3965, -84.350304],
  "BTV": [44.471901, -73.153297],
  "PHF": [37.131901, -76.492996],
  "SBN": [41.708698, -86.317299],
  "IAD": [38.9445, -77.455803],
  "MGM": [32.300598, -86.393997],
  "SRQ": [27.394631, -82.554359],
  "JAC": [43.6072998046875, -110.73799896240234],
  "LCK": [39.813801, -82.927803],
  "SAV": [32.12760162, -81.20210266],
  "GFK": [47.949299, -97.176102],
  "PAE": [47.9063, -122.281998],
  "SGF": [37.245701, -93.388603],
  "MOT": [48.2593994140625, -101.27999877929688],
  "MVY": [41.3931007385, -70.6143035889],
  "TUL": [36.19839859008789, -95.88809967041016],
  "JAN": [32.311199, -90.075897],
  "LIT": [34.729582, -92.223728],
  "MSO": [46.91630173, -114.0910034],
  "PNS": [30.4734, -87.1866],
  "BLV": [38.5452, -89.835197],
  "BIL": [45.807701, -108.542999],
  "ATW": [44.258099, -88.519096],
  "FSD": [43.585463, -96.741152],
  "PIA": [40.6642, -89.693298],
  "BMI": [40.4771, -88.915901],
  "HTS": [38.366699, -82.557999],
  "FNT": [42.96540069580078, -83.74359893798828],
  "RIC": [37.50519943237305, -77.3197021484375],
  "CHA": [35.035301, -85.203796],
  "MLB": [28.1028, -80.645302],
  "DAB": [29.179899, -81.058098],
  "AGS": [33.3699, -81.9645],
  "GEG": [47.6199, -117.533997],
  "TUS": [32.115004, -110.938053],
  "MFE": [26.176141, -98.237965],
  "STS": [38.50899887, -122.8130035],
  "PBI": [26.68320083618164, -80.09559631347656],
  "LNK": [40.85100173950195, -96.75920104980469],
  "ICT": [37.649899, -97.433098],
  "MAF": [31.942499, -102.202003],
  "RFD": [42.1954, -89.097198],
  "LBB": [33.663601, -101.822998],
  "PVU": [40.2192, -111.723],
  "SBA": [34.426201, -119.839996],
  "SPI": [39.844101, -89.677902],
  "MRY": [36.58700180053711, -121.84300231933594],
  "SHV": [32.446602, -93.8256],
  "ILM": [34.270599365234375, -77.90260314941406],
  "PBG": [44.650901794433594, -73.46810150146484],
  "GPT": [30.407301, -89.070099],
  "TVC": [44.74140167236328, -85.58219909667969],
  "ORH": [42.2673, -71.875702],
  "MTJ": [38.5098, -107.893997],
  "PGD": [26.9202, -81.990501],
  "HDN": [40.481201, -107.218002],
  "EVV": [38.0369987488, -87.5324020386],
  "ROA": [37.3255, -79.975403],
  "MBS": [43.532902, -84.079597],
  "TOL": [41.5868, -83.8078],
  "TTN": [40.27669906616211, -74.8134994506836],
  "RAP": [44.0452995300293, -103.05699920654297],
  "IAG": [43.1073, -78.946198],
  "SFB": [28.777599334716797, -81.23750305175781],
  "STC": [45.5466, -94.059898],
  "AZA": [33.3090, -111.6559],
  "USA": [35.3804, -80.7141],
  "HHH": [32.2248, -80.6972],
  "FCA": [48.3068, -114.2521]
};


document.addEventListener('DOMContentLoaded', function() {
  var metricForm = document.getElementById('metric-form');
  if (metricForm) {
    metricForm.addEventListener('submit', async function(event) {
      event.preventDefault();  
    
      var metricType = document.getElementById('metric-type').value;
      console.log(metricType);

      if (metricType == 'airport-traffic-metric') {
        airportTrafficMetric();
      // } else if (metricType == 'airport-time-metric') {

      // } else if (metricType == 'airline-traffic-metric') {

      } else if (metricType == 'airline-time-metric') {
        airlineTimeMetric();
      }
    });
  }
});

var allCircles = [];

async function airportTrafficMetric() {
  const response = await fetch('/airport_traffic', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: ''
  });

  const data = await response.json();
  console.log(data);
  if (data.success) {
    // var center = { lat:39.8283, lng:-98.5795 };	
    var center = { lat:38, lng:-98.5795 };	

    var mapOptions = {
        zoom: 4,
        center: center,
        mapTypeId: google.maps.MapTypeId.RoadMap
    };

    var map_container = document.getElementById('map-container');
    map_container.style.display = "block";

    var chart_container = document.getElementById('chart-container');
    chart_container.style.display = "none";

    var color_legend = document.getElementById('color-legend');
    color_legend.style.display = "block";

    var map_element = document.getElementById('map-canvas');
    map_element.style.display = "block";
    var map = new google.maps.Map(map_element, mapOptions);
    
    data.data[0].forEach(function(airportData) {
      var airport = airportData.airport;
      var num_incoming = airportData.num_incoming;
      var num_outgoing = airportData.num_outgoing;
      var size = num_incoming + num_outgoing;

      var proportion = num_outgoing / (num_incoming + num_outgoing);

      var red = { r: 255, g: 0, b: 0};
      var green = { r: 0, g: 255, b: 0};

      var color = calculateColor(red, green, proportion);

      // console.log(airportData);
      var airport_coord = { lat: airport_coords[airport][0], lng: airport_coords[airport][1] }

      var circle = new google.maps.Circle({
        strokeColor: color,
        strokeOpacity: 0.6,
        strokeWeight: 2,
        fillColor: color,
        fillOpacity: 0.35,
        map,
        center: airport_coord,
        radius: size * 2.5,
        zIndex: 100000 - size
      })

      var origin_delay = airportData.origin_avg_delay;
      var dest_delay = airportData.dest_avg_delay;

      allCircles.push(
        {
          circle: circle,
          airport: airport,
          num_incoming: num_incoming,
          num_outgoing: num_outgoing,
          proportion: proportion,
          origin_delay: origin_delay,
          dest_delay: dest_delay
        }
      );

      clickOnCircle(circle, airport, num_incoming, num_outgoing, proportion, origin_delay, dest_delay);

      const tableBody = document.querySelector('#airports-table tbody');
      tableBody.innerHTML = '';

      // console.log('Data:', data.data);
      data.data[0].forEach(row => {
        const tableRow = document.createElement('tr');
        for (const key in row) {
          const tableCell = document.createElement('td');
          var value = row[key];
          // console.log(key);
          if (key == 'num_outgoing' | key == 'num_incoming') {
            value = value.toFixed(0);
          } else if (key == 'origin_avg_delay' | key == 'dest_avg_delay') {
            value = value.toFixed(2);
          }

          tableCell.textContent = value;
          tableRow.appendChild(tableCell);
        }
        tableBody.appendChild(tableRow);
      });
      

    });
  } else {
    alert("Something went wrong. Please try again.")
  }
}

function calculateColor(color1, color2, proportion) {
  const result = {};
    for (const channel in color1) {
        if (color1.hasOwnProperty(channel)) {
            result[channel] = Math.round(color1[channel] + proportion * (color2[channel] - color1[channel]));
        }
    }
    return `rgb(${result.r}, ${result.g}, ${result.b})`;
}

function clickOnCircle(circle, airport, incoming, outgoing, proportion, origin_delay, dest_delay) {
  google.maps.event.addListener(circle, 'click', function(event) {
    // alert('Polyline clicked at location: ' + event.latLng);
    var msg = `
      Airport: ${airport}
      Number of flights:
          Incoming: ${incoming}
          Outgoing: ${outgoing}
          Proportion of outgoing flights: ${(proportion * 100).toFixed(2)}%
      Average total delay:
          Airport as origin: ${origin_delay.toFixed(2)} min
          Airport as destination: ${dest_delay.toFixed(2)} min
    `;
    alert(msg);
  });
}


document.addEventListener('DOMContentLoaded', function() {
  const filterForm = document.getElementById('filter-form');

  if (filterForm) {
    filterForm.addEventListener('submit', async function(event) {
      event.preventDefault();  
      var originMinDelayInput = document.getElementById('originMinDelay').value;
      var originMaxDelayInput = document.getElementById('originMaxDelay').value;
      var destMinDelayInput = document.getElementById('destMinDelay').value;
      var destMaxDelayInput = document.getElementById('destMaxDelay').value;

      var originMinDelay = (originMinDelayInput != '') ? parseFloat(originMinDelayInput) : Number.MIN_SAFE_INTEGER; 
      var originMaxDelay = (originMaxDelayInput != '') ? parseFloat(originMaxDelayInput) : Number.MAX_SAFE_INTEGER; 
      var destMinDelay = (destMinDelayInput != '') ? parseFloat(destMinDelayInput) : Number.MIN_SAFE_INTEGER; 
      var destMaxDelay = (destMaxDelayInput != '') ? parseFloat(destMaxDelayInput) : Number.MAX_SAFE_INTEGER; 

      allCircles.forEach(function(item) {
        item.circle.setVisible(false);
      });

      allCircles.forEach(function(item) {
        if (item.origin_delay >= originMinDelay & item.origin_delay <= originMaxDelay &
            item.dest_delay >= destMinDelay & item.dest_delay <= destMaxDelay) {
          
          item.circle.setVisible(true);
        }
        
      });
    });
  }
});


var allCircles2 = [];

async function airlineTimeMetric() {
  const response = await fetch('/airline_timeliness', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: ''
  });

  const airlineData = await response.json();
  console.log(airlineData);

  var map_container = document.getElementById('map-container');
  map_container.style.display = "none";

  var chart_container = document.getElementById('chart-container');
  chart_container.style.display = "block";

  var map_container2 = document.getElementById('map-container2');
    map_container2.style.display = "block";

  var airlineTimes = airlineData.data[0];
  // const labels = Array(Object.keys(airlineTimes).length);
  // const earlyData = Array(Object.keys(airlineTimes).length);
  // const lateData = Array(Object.keys(airlineTimes).length);
  var labels = [];
  var earlyData = [];
  var lateData = [];
  var propData = [];

  airlineTimes.forEach(function(airline) {
      // labels.push(airline.airline.concat(' (', airline.airline_code, ')'));
      // labels.push(airline.airline_code);
      labels.push(airline.airline_code.concat(': ', airline.airline));
      earlyData.push(airline.num_early);
      lateData.push(airline.num_late);
      propData.push(airline.prop_early * 100);
  });

  const data1 = {
    labels: labels,
    datasets: [
      {
        label: 'Early Flights',
        data: earlyData,
        backgroundColor: [ 'rgba(0, 255, 0, 0.2)' ],
        borderColor: [ 'rgb(0, 255, 0)' ],
        borderWidth: 1
      },
      {
        label: 'Late Flights',
        data: lateData,
        backgroundColor: [ 'rgba(255, 0, 0, 0.2)' ],
        borderColor: [ 'rgb(255, 0, 0)' ],
        borderWidth: 1
      },
    ]
  };
  
  const config1 = {
    type: 'bar',
    data: data1,
    options: {
      scales: {
        x: {
          title: { display: true, text: 'Airline Code' },
          ticks: {
            callback: function(index) {
              const label = labels[index].substring(0, 2);
              return label;
            }
          }
        },
        y: {
          beginAtZero: true,
          title: { display: true, text: 'Number of Flights' }
        },
      }
    },
  };

  const data2 = {
    labels: labels,
    datasets: [
      {
        label: 'Early Flight Proportion',
        data: propData,
        backgroundColor: [ 'rgba(0, 0, 255, 0.2)' ],
        borderColor: [ 'rgb(0, 0, 255)' ],
        borderWidth: 1
      },
    ]
  };
  
  const config2 = {
    type: 'bar',
    data: data2,
    options: {
      scales: {
        x: {
          title: { display: true, text: 'Airline Code' },
          ticks: {
            callback: function(index) {
              const label = labels[index].substring(0, 2);
              return label;
            }
          }
        },
        y: {
          beginAtZero: true,
          title: { display: true, text: 'Proportion (%)' }
        }
      }
    },
  };

  const ctx1 = document.getElementById('chart1').getContext('2d');
  new Chart(ctx1, config1);

  const ctx2 = document.getElementById('chart2').getContext('2d');
  new Chart(ctx2, config2);



  var center = { lat:38, lng:-98.5795 };	

  var mapOptions = {
      zoom: 4,
      center: center,
      mapTypeId: google.maps.MapTypeId.RoadMap
  };

  // var color_legend = document.getElementById('color-legend2');
  // color_legend.style.display = "block";

  var map_element = document.getElementById('map-canvas2');
  map_element.style.display = "block";

  var map = new google.maps.Map(map_element, mapOptions);


  var airportData = airlineData.data[1];

  var topAirports = {};

  airportData.forEach(function(airline) {
    var airline_code = airline.airline_code;
    var airline_name = airline.airline;
    var origin_airport = airline.origin_airport;
    var num_flights = airline.num_flights;
    var rank = airline.airport_rank;

    if (!topAirports[airline_code]) {
      topAirports[airline_code] = [];
    }

    topAirports[airline_code].push({ airline_name, origin_airport, num_flights, rank } );

  });

  console.log('topAirports', topAirports);

  for (const airline in topAirports) {
    // Access the list of airport and num_flights objects for the airline
    const airportsList = topAirports[airline];

    airportsList.forEach(({ airline_name, origin_airport, num_flights, rank }) => {
      var airport_coord = { lat: airport_coords[origin_airport][0], lng: airport_coords[origin_airport][1] }
      var circle = new google.maps.Circle({
        strokeColor: '#FFFF00',
        strokeOpacity: 0.6,
        strokeWeight: 2,
        fillColor: '#FFFF00',
        fillOpacity: 0.35,
        map,
        center: airport_coord,
        radius: num_flights * 6,
        zIndex: 100000 - num_flights
      })

      if (airline != 'WN') {
        circle.setVisible(false);
      }

      allCircles2.push(
        {
          circle: circle,
          airline_code: airline,
          airline_name: airline_name,
          origin_airport: origin_airport,
          num_flights: num_flights,
          rank: rank
        }
      );

      clickOnCircle2(circle, airline, airline_name, origin_airport, num_flights, rank);
    });

   
  }
}

function clickOnCircle2(circle, airline, airline_name, origin_airport, num_flights, rank) {
  google.maps.event.addListener(circle, 'click', function(event) {
    // alert('Polyline clicked at location: ' + event.latLng);
    var msg = `
      Airline name: ${airline_name}
      Airline code: ${airline}
          Airport: ${origin_airport}
          Airport rank: ${rank}
          Number of outgoing flights: ${num_flights}
    `;
    alert(msg);
  });
}

var selectElement = document.getElementById('airlineSelect');

selectElement.addEventListener('change', function(event) {
  var airline = event.target.value;
  console.log(airline);

  allCircles2.forEach(function(item) {
    item.circle.setVisible(false);
  });

  allCircles2.forEach(function(item) {
    if (item.airline_code == airline) {
      
      item.circle.setVisible(true);
    }
    
  });
})

</script>

<style>
#map-canvas {
  height: 60vh;
  width: 65vw;
}

.header {
  background-color: #182628;
  align-items:center;
  height: 60px;
}

html {
  font-size: 13px;
}

.content {
  height: calc(100vh - 60px);
  width: 100%;
  overflow: hidden;
}

.metric-form {
  margin: 10px;
}

/* .visualization {
  justify-content: center;
  align-items: center;
} */

#map-container {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  /* padding-left: 20px; */
}

#submit-filter {
  width: 120px; 
  margin-left: 10px;
  margin-top: 10px;
}

.table-container {
  max-height: 60vh;
  overflow: auto;
  display:inline-block;
  border-style: solid;
  /* background-color: #ececec;
  padding: 30px; */
  /* margin-left: 5px; */
}

table {
  text-align: left;
  position: relative;
}

th {
  background: white;
  position: sticky;
  top: 0;
}

#map-canvas2 {
  height: 50vh;
  width: 50vw;
}


#map-container2 {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: 10px;
}

.min-max {
  width: 135px;
}


.btn-primary,
.btn-primary:hover,
.btn-primary:active,
.btn-primary:visited,
.btn-primary:focus {
  background-color: #3a7f9f !important;
  border-color: #3a7f9f !important;
}

.btn-secondary,
.btn-secondary:hover,
.btn-secondary:active,
.btn-secondary:visited,
.btn-secondary:focus {
  background-color: #D8C3A5 !important;
  border-color: #D8C3A5 !important;
  color: black;
}
</style>
</body>
</html>